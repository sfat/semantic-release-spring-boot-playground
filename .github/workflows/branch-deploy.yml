name: Branch deploy
run-name: "Branch initialize deploy with version/branch: ${{ inputs.version }}"
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to deploy"
        required: true
# Avoid running multiple pipelines concurrently to avoid overlapping releases
concurrency:
  group: branch-deploy
  cancel-in-progress: false

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest
    outputs:
      sanitize_version: ${{ steps.sanitize_version.outputs.trimmed_input}}
    env:
      IMAGE_NAME: sfat/release-gradle-plugins-playground
    steps:
      - id: sanitize_version
        run: |
          trimmed_input=$(echo "${{ github.event.inputs.version }}" | tr -d '[:space:]')
          echo "trimmed_input=$trimmed_input" >> $GITHUB_OUTPUT
          # Regular expression for semantic versioning
          semver_regex="^[0-9]+\.[0-9]+\.[0-9]+$"

          if [[ $trimmed_input =~ $semver_regex ]]; then
            # If it's a semantic version, just replace slashes with dashes
            image_version="${trimmed_input//\//-}"
          else
            # If it's a branch, replace slashes with dashes and append the run number
            image_version="${trimmed_input//\//-}-${{ github.run_number }}"
          fi
          echo "image_version=$image_version" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.sanitize_version.outputs.trimmed_input }}
      - uses: actions/setup-java@v5
        with:
          distribution: corretto
          java-version: 21
      - uses: gradle/gradle-build-action@v3
      - name: Build jar
        run: ./gradlew bootJar
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          provenance: false
          tags: ${{ env.IMAGE_NAME }}:${{ steps.sanitize_version.outputs.image_version }}
